{"version":3,"sources":["img.png","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","newItem","list","todoValue","id","Date","now","value","isDone","this","push","setState","updatedList","filter","item","input","src","logo","width","height","className","type","placeholder","required","onChange","e","updateInput","target","onClick","addItem","disabled","length","map","name","checked","deleteItem","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAAe,MAA0B,gCC0G1BA,G,wDArGd,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACZC,QAAQ,GACRC,KAAM,IAJS,E,oDASVC,GACN,GAAgB,IAAbA,EAAgB,CAEjB,IAAMF,EAAU,CACdG,GAAIC,KAAKC,MACTC,MAAOJ,EACPK,QAAQ,GAGJN,EAAI,YAAOO,KAAKT,MAAME,MAC5BA,EAAKQ,KAAKT,GAEVQ,KAAKE,SAAS,CACZT,OACAD,QAAS,Q,iCAMJG,GACT,IACMQ,EADI,YAAOH,KAAKT,MAAME,MACHW,QAAO,SAAAC,GAAI,OAAIA,EAAKV,KAAOA,KACpDK,KAAKE,SAAS,CAACT,KAAMU,M,kCAIXG,GACVN,KAAKE,SAAS,CACbV,QAAUc,M,+BAMF,IAAD,OACP,OACE,gCACE,qBAAKC,IAAKC,EAAMC,MAAM,MAAMC,OAAO,MAAMC,UAAU,SACnD,oBAAIA,UAAU,YAAd,0BACA,sBAAKA,UAAU,YAAf,4BAEE,uBACA,uBACEC,KAAK,OACLD,UAAU,aACVE,YAAY,eACZC,UAAQ,EACRhB,MAAOE,KAAKT,MAAMC,QAClBuB,SAAU,SAAAC,GAAC,OAAI,EAAKC,YAAYD,EAAEE,OAAOpB,UAE3C,wBACEa,UAAU,UACVQ,QAAS,kBAAM,EAAKC,QAAQ,EAAK7B,MAAMC,UACvC6B,UAAWrB,KAAKT,MAAMC,QAAQ8B,OAHhC,sBAOA,qBAAKX,UAAU,OAAf,SACE,+BACGX,KAAKT,MAAME,KAAK8B,KAAI,SAAAlB,GACnB,OACE,+BACE,uBACEO,KAAK,WACLY,KAAK,SACLC,QAASpB,EAAKN,OACdgB,SAAU,eAEXV,EAAKP,MACN,wBACEa,UAAU,MACVQ,QAAS,kBAAM,EAAKO,WAAWrB,EAAKV,KAFtC,sBAROU,EAAKV,OAiBlB,+BACE,uBAAOiB,KAAK,WAAWY,KAAK,GAAG7B,GAAG,KADpC,wBAGE,wBAAQgB,UAAU,MAAlB,sC,GA5FEgB,IAAMC,YCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.575fb0a2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/img.a27393b8.png\";","import React from \"react\";\nimport logo from \"./img.png\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n constructor(props){\n   super(props);\n   this.state = {\n    newItem:\"\", \n    list: []\n   }\n\n }\n\n addItem(todoValue){\n   if(todoValue != \"\"){\n     //giving a unique ID\n     const newItem = {\n       id: Date.now(),\n       value: todoValue,\n       isDone: false\n     };\n\n     const list = [...this.state.list];  //... means append all the values\n     list.push(newItem);\n\n     this.setState({\n       list,\n       newItem: \"\"\n     });\n\n   }\n }\n\n deleteItem(id){\n   const list = [...this.state.list];\n   const updatedList = list.filter(item => item.id !== id);\n   this.setState({list: updatedList})\n\n }\n\n updateInput(input){\n   this.setState({\n    newItem : input\n  }); \n\n }\n \n\n  render() {\n    return (\n      <div>\n        <img src={logo} width=\"100\" height=\"100\" className=\"logo\" />\n        <h1 className=\"app-title\">LCO ToDo App</h1>\n        <div className=\"container\">\n          Add an Item....\n          <br />\n          <input\n            type=\"text\"\n            className=\"input-text\"\n            placeholder=\"Write a Todo\"\n            required\n            value={this.state.newItem}\n            onChange={e => this.updateInput(e.target.value)}\n          />\n          <button\n            className=\"add-btn\"\n            onClick={() => this.addItem(this.state.newItem)}\n            disabled={!this.state.newItem.length}\n          >\n            Add Todo\n          </button>\n          <div className=\"list\">\n            <ul>\n              {this.state.list.map(item => {\n                return (\n                  <li key={item.id}>\n                    <input\n                      type=\"checkbox\"\n                      name=\"idDone\"\n                      checked={item.isDone}\n                      onChange={() => {}}\n                    />\n                    {item.value}\n                    <button\n                      className=\"btn\"\n                      onClick={() => this.deleteItem(item.id)}\n                    >\n                      Delete\n                    </button>\n                  </li>\n                );\n              })}\n              <li>\n                <input type=\"checkbox\" name=\"\" id=\"\" />\n                Record youtube videos\n                <button className=\"btn\">Delete</button>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}